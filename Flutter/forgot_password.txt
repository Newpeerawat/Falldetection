import 'package:flutter/material.dart';
import 'package:flutter_application_3/user_service.dart';

class ForgotPasswordPage extends StatefulWidget {
  final String? user;

  const ForgotPasswordPage({Key? key, this.user}) : super(key: key);

  @override
  State<ForgotPasswordPage> createState() => _ForgotPasswordState();
}

class _ForgotPasswordState extends State<ForgotPasswordPage> {
  String? user;
  final _formKey = GlobalKey<FormState>();
  final TextEditingController _userController = TextEditingController();
  //final TextEditingController _passwordController = TextEditingController();
  final UserService _userService = UserService(); // Instance of UserService
  //bool _obscurePassword = true; // ตัวแปรเพื่อควบคุมการแสดง/ซ่อนรหัสผ่าน

  @override
  void initState() {
    super.initState();
    _userController.text = widget.user!;
  }

  Future<void> _CheckData(String username) async {
    // ดึงข้อมูลผู้ใช้ทั้งหมด
    List<Map<String, String>> userDetails =
        await _userService.getAllUserDetails();

    // ค้นหา username ที่ตรงกัน
    for (var user in userDetails) {
      if (username == user['username']) {
        // พบ username ที่ตรงกัน แสดง password
        String? password = user['password'];
        showDialog(
          context: context,
          builder: (context) {
            return AlertDialog(
              title: Text('Password Found'),
              content: Text('Password for $username: $password'),
              actions: [
                TextButton(
                  onPressed: () {
                    Navigator.of(context).pop(); // ปิด Dialog
                  },
                  child: Text('OK'),
                ),
              ],
            );
          },
        );
        return; // จบการทำงานเมื่อพบ username
      }
    }

    // ไม่พบ username
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(content: Text('Username not found!')),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          backgroundColor: Theme.of(context).colorScheme.tertiary,
          title: const Text('Forgot Password'),
        ),
        body: Container(
          padding: EdgeInsets.all(10),
          child: Form(
            key: _formKey,
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: <Widget>[
                SizedBox(
                  height: 10,
                ),
                TextFormField(
                  controller: _userController,
                  decoration: InputDecoration(labelText: 'Username'),
                  validator: (input) {
                    if (input == null || input.isEmpty) {
                      return 'Please Enter Username';
                    }
                    return null;
                  },
                ),
                /*SizedBox(
                  height: 10,
                ),
                TextFormField(
                  controller: _passwordController,
                  decoration: InputDecoration(
                    labelText: 'Password',
                    suffixIcon: IconButton(
                      icon: Icon(
                        _obscurePassword
                            ? Icons.visibility
                            : Icons.visibility_off,
                      ),
                      onPressed: () {
                        setState(() {
                          _obscurePassword = !_obscurePassword;
                        });
                      },
                    ),
                  ),
                  obscureText: _obscurePassword, // ควบคุมการแสดง/ซ่อนรหัสผ่าน
                  validator: (input) {
                    if (input == null || input.isEmpty) {
                      return 'Please Enter Password';
                    }
                    return null;
                  },
                ),*/
                SizedBox(
                  height: 10,
                ),
                //Get Password
                Row(
                  children: <Widget>[
                    Expanded(
                      child: FloatingActionButton(
                        onPressed: () async {
                          if (_formKey.currentState!.validate()) {
                            await _CheckData(_userController
                                .text); // เรียกใช้ฟังก์ชันเพื่อดึงรหัสผ่าน
                          }
                          /*bool pass = _formKey.currentState!.validate();
                          if (pass) {
                            await _userService.saveUser(
                              _userController.text,
                              _passwordController.text,
                            );
                            Navigator.push(
                              context,
                              MaterialPageRoute(
                                builder: (context) =>
                                    const LoginPage(title: 'Login'),
                              ),
                            ); //ไปหน้าLoginเพื่อยืนยันตัวตน*/
                          /*Navigator.push(
                              context,
                              MaterialPageRoute(
                                builder: (context) =>
                                    const MyHomePage(title: 'Fall Detection'),
                              ),
                            ); //ไปหน้าHome
                          }*/
                        },
                        backgroundColor: Colors.red[300],
                        child: const Text('Get Password'),
                      ),
                    ),
                  ],
                ),
                /*//Clear data
                Row(
                  children: <Widget>[
                    Expanded(
                      child: OutlinedButton(
                        onPressed: () {
                          showDialog(
                            context: context,
                            builder: (BuildContext context) {
                              return AlertDialog(
                                title: Text('Are you sure?'),
                                content:
                                    Text('All entered data will be deleted.'),
                                actions: <Widget>[
                                  TextButton(
                                    onPressed: () {
                                      _formKey.currentState!.reset();
                                      setState(() {
                                        _userController.clear();
                                        //_passwordController.clear();
                                      });
                                      Navigator.of(context).pop();
                                    },
                                    child: Text('Clear'),
                                  ),
                                  TextButton(
                                    onPressed: () {
                                      Navigator.of(context).pop();
                                    },
                                    child: Text('Cancel'),
                                  ),
                                ],
                              );
                            },
                          );
                        },
                        child: Text('Clear'),
                      ),
                    ),
                  ],
                ),*/
                /*SizedBox(
                  height: 10,
                ),
                //Delete All Account
                Row(
                  children: <Widget>[
                    GestureDetector(
                      onTap: () {
                        showDialog(
                          context: context,
                          builder: (BuildContext context) {
                            return AlertDialog(
                              title: Text('Are you sure?'),
                              content: Text('All data will be deleted.'),
                              actions: <Widget>[
                                TextButton(
                                  onPressed: () async {
                                    await _userService.clearAllUsers();
                                    /*// ล้างข้อมูลใน SharedPreferences คือการลบข้อมูลทั้งหมด
                                    SharedPreferences prefs =
                                        await SharedPreferences.getInstance();
                                    await prefs.remove('user');
                                    await prefs.remove('password');*/
                                    setState(() {
                                      _userController.clear();
                                      //_passwordController.clear();
                                    });
                                    Navigator.of(context).pop();
                                    ScaffoldMessenger.of(context).showSnackBar(
                                      SnackBar(
                                          content:
                                              Text('All accounts deleted.')),
                                    );
                                    Navigator.push(
                                      context,
                                      MaterialPageRoute(
                                        builder: (context) => LoginPage(
                                          title: 'Login',
                                        ),
                                      ),
                                    );
                                  },
                                  child: Text('Delete'),
                                ),
                                TextButton(
                                  onPressed: () {
                                    Navigator.of(context).pop();
                                  },
                                  child: Text('Cancel'),
                                ),
                              ],
                            );
                          },
                        );
                      },
                      child: Text(
                        'Delete all account',
                        style: TextStyle(
                          color: Colors.red,
                        ),
                      ),
                    ),
                  ],
                ),*/
              ],
            ),
          ),
        ));
  }
}
